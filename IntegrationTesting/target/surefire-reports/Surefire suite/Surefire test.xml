<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="sts-XPS-8900" failures="0" tests="286" name="Surefire test" time="0.148" errors="0" timestamp="16 Feb 2020 03:27:40 GMT">
  <testcase classname="example.BlogManagementPageTest" name="@BeforeClass beforeClass" time="0.0">
    <failure type="org.testng.TestNGException" message="
Parameter &amp;apos;os&amp;apos; is required by @Configuration on method beforeClass but has not been marked @Optional or defined
">
      <![CDATA[org.testng.TestNGException: 
Parameter 'os' is required by @Configuration on method beforeClass but has not been marked @Optional or defined

	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
... Removed 18 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeClass beforeClass -->
  <testcase classname="example.BlogManagementPageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.BlogManagementPageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.BlogManagementPageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.BlogManagementPageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.BlogManagementPageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.BlogManagementPageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.BlogManagementPageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.BlogManagementPageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.BlogManagementPageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.BlogManagementPageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.BlogManagementPageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.BlogManagementPageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.BlogManagementPageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.BlogManagementPageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.BlogManagementPageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.BlogManagementPageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.BlogManagementPageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.BlogManagementPageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.BlogManagementPageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.BlogManagementPageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.BlogManagementPageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.BlogManagementPageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.BlogManagementPageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.BlogManagementPageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.BlogManagementPageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.BlogManagementPageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.BlogManagementPageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.BlogManagementPageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.BlogManagementPageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.BlogManagementPageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.BlogManagementPageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.BlogManagementPageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.BlogManagementPageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.BlogManagementPageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.BlogManagementPageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.BlogManagementPageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.BlogManagementPageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.BlogManagementPageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.BlogManagementPageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.BlogManagementPageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.BlogManagementPageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.BlogManagementPageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.BlogManagementPageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.BlogManagementPageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.BlogManagementPageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.BlogManagementPageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.BlogManagementPageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.BlogManagementPageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.BlogManagementPageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.BlogManagementPageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.BlogManagementPageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.BlogManagementPageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.BlogManagementPageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.BlogManagementPageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.BlogManagementPageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.BlogManagementPageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.BlogManagementPageTest" name="@AfterClass afterClass" time="0.0">
    <failure type="java.lang.NullPointerException">
      <![CDATA[java.lang.NullPointerException
	at example.BaseTest.afterClass(BaseTest.java:134)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
... Removed 21 stack frames]]>
    </failure>
  </testcase> <!-- @AfterClass afterClass -->
  <testcase classname="example.UpdateBlogPageTest" name="@BeforeClass beforeClass" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeClass beforeClass -->
  <testcase classname="example.UpdateBlogPageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.UpdateBlogPageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.UpdateBlogPageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.UpdateBlogPageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.UpdateBlogPageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.UpdateBlogPageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.UpdateBlogPageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.UpdateBlogPageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.UpdateBlogPageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.UpdateBlogPageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.UpdateBlogPageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.UpdateBlogPageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.UpdateBlogPageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.UpdateBlogPageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.UpdateBlogPageTest" name="@AfterClass afterClass" time="0.0">
    <failure type="java.lang.NullPointerException">
      <![CDATA[java.lang.NullPointerException
	at example.BaseTest.afterClass(BaseTest.java:134)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
... Removed 21 stack frames]]>
    </failure>
  </testcase> <!-- @AfterClass afterClass -->
  <testcase classname="example.BlogListPageTest" name="@BeforeClass beforeClass" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeClass beforeClass -->
  <testcase classname="example.BlogListPageTest" name="@AfterClass afterClass" time="0.0">
    <failure type="java.lang.NullPointerException">
      <![CDATA[java.lang.NullPointerException
	at example.BaseTest.afterClass(BaseTest.java:134)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
... Removed 21 stack frames]]>
    </failure>
  </testcase> <!-- @AfterClass afterClass -->
  <testcase classname="example.BlogPageTest" name="@BeforeClass beforeClass" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeClass beforeClass -->
  <testcase classname="example.BlogPageTest" name="@AfterClass afterClass" time="0.0">
    <failure type="java.lang.NullPointerException">
      <![CDATA[java.lang.NullPointerException
	at example.BaseTest.afterClass(BaseTest.java:134)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
... Removed 21 stack frames]]>
    </failure>
  </testcase> <!-- @AfterClass afterClass -->
  <testcase classname="example.HomePageTest" name="@BeforeClass beforeClass" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeClass beforeClass -->
  <testcase classname="example.HomePageTest" name="@AfterClass afterClass" time="0.0">
    <failure type="java.lang.NullPointerException">
      <![CDATA[java.lang.NullPointerException
	at example.BaseTest.afterClass(BaseTest.java:134)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
... Removed 21 stack frames]]>
    </failure>
  </testcase> <!-- @AfterClass afterClass -->
  <testcase classname="example.LoginPageTest" name="@BeforeClass beforeClass" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeClass beforeClass -->
  <testcase classname="example.LoginPageTest" name="@AfterClass afterClass" time="0.0">
    <failure type="java.lang.NullPointerException">
      <![CDATA[java.lang.NullPointerException
	at example.BaseTest.afterClass(BaseTest.java:134)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
... Removed 21 stack frames]]>
    </failure>
  </testcase> <!-- @AfterClass afterClass -->
  <testcase classname="example.HeaderComponentTest" name="@BeforeClass beforeClass" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeClass beforeClass -->
  <testcase classname="example.HeaderComponentTest" name="@AfterClass afterClass" time="0.0">
    <failure type="java.lang.NullPointerException">
      <![CDATA[java.lang.NullPointerException
	at example.BaseTest.afterClass(BaseTest.java:134)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
... Removed 21 stack frames]]>
    </failure>
  </testcase> <!-- @AfterClass afterClass -->
  <testcase classname="example.NewBlogPageTest" name="@BeforeClass beforeClass" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeClass beforeClass -->
  <testcase classname="example.NewBlogPageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.NewBlogPageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.NewBlogPageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.NewBlogPageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.NewBlogPageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.NewBlogPageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.NewBlogPageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.NewBlogPageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.NewBlogPageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.NewBlogPageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.NewBlogPageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.NewBlogPageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.NewBlogPageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.NewBlogPageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.NewBlogPageTest" name="@AfterClass afterClass" time="0.0">
    <failure type="java.lang.NullPointerException">
      <![CDATA[java.lang.NullPointerException
	at example.BaseTest.afterClass(BaseTest.java:134)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
... Removed 21 stack frames]]>
    </failure>
  </testcase> <!-- @AfterClass afterClass -->
  <testcase classname="example.ProfilePageTest" name="@BeforeClass beforeClass" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeClass beforeClass -->
  <testcase classname="example.ProfilePageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.ProfilePageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.ProfilePageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.ProfilePageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.ProfilePageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.ProfilePageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.ProfilePageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.ProfilePageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.ProfilePageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.ProfilePageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.ProfilePageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.ProfilePageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.ProfilePageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.ProfilePageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.ProfilePageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.ProfilePageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.ProfilePageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.ProfilePageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.ProfilePageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.ProfilePageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.ProfilePageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.ProfilePageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.ProfilePageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.ProfilePageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.ProfilePageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.ProfilePageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.ProfilePageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.ProfilePageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.ProfilePageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.ProfilePageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.ProfilePageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.ProfilePageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.ProfilePageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.ProfilePageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.ProfilePageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.ProfilePageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.ProfilePageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.ProfilePageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.ProfilePageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.ProfilePageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.ProfilePageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.ProfilePageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.ProfilePageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.ProfilePageTest" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="example.ProfilePageTest" name="@AfterClass afterClass" time="0.0">
    <failure type="java.lang.NullPointerException">
      <![CDATA[java.lang.NullPointerException
	at example.BaseTest.afterClass(BaseTest.java:134)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
... Removed 21 stack frames]]>
    </failure>
  </testcase> <!-- @AfterClass afterClass -->
  <testcase classname="example.SignupPageTest" name="@BeforeClass beforeClass" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeClass beforeClass -->
  <testcase classname="example.SignupPageTest" name="@AfterClass afterClass" time="0.0">
    <failure type="java.lang.NullPointerException">
      <![CDATA[java.lang.NullPointerException
	at example.BaseTest.afterClass(BaseTest.java:134)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
... Removed 21 stack frames]]>
    </failure>
  </testcase> <!-- @AfterClass afterClass -->
  <testcase classname="example.BlogManagementPageTest" name="shouldDeleteASpecificBlogItemWhenClickDeleteButtonOnTheBlogItem" time="0.003">
    <skipped/>
  </testcase> <!-- shouldDeleteASpecificBlogItemWhenClickDeleteButtonOnTheBlogItem -->
  <testcase classname="example.BlogManagementPageTest" name="shouldDeleteASpecificBlogItemWhenClickDeleteButtonOnTheBlogItem" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDeleteASpecificBlogItemWhenClickDeleteButtonOnTheBlogItem -->
  <testcase classname="example.BlogManagementPageTest" name="shouldDeleteASpecificBlogItemWhenClickDeleteButtonOnTheBlogItem" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDeleteASpecificBlogItemWhenClickDeleteButtonOnTheBlogItem -->
  <testcase classname="example.BlogManagementPageTest" name="shouldDeleteASpecificBlogItemWhenClickDeleteButtonOnTheBlogItem" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDeleteASpecificBlogItemWhenClickDeleteButtonOnTheBlogItem -->
  <testcase classname="example.BlogManagementPageTest" name="shouldDisplayBlogManagementAfterChangeDifferentPage" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayBlogManagementAfterChangeDifferentPage -->
  <testcase classname="example.BlogManagementPageTest" name="shouldDisplayBlogManagementAfterChangeDifferentPage" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayBlogManagementAfterChangeDifferentPage -->
  <testcase classname="example.BlogManagementPageTest" name="shouldDisplayBlogManagementAfterChangeDifferentPage" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayBlogManagementAfterChangeDifferentPage -->
  <testcase classname="example.BlogManagementPageTest" name="shouldDisplayBlogManagementAfterChangeDifferentPage" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayBlogManagementAfterChangeDifferentPage -->
  <testcase classname="example.BlogManagementPageTest" name="shouldDisplayBlogManagementAfterClickLimitChangeElement" time="0.001">
    <skipped/>
  </testcase> <!-- shouldDisplayBlogManagementAfterClickLimitChangeElement -->
  <testcase classname="example.BlogManagementPageTest" name="shouldDisplayBlogManagementAfterClickLimitChangeElement" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayBlogManagementAfterClickLimitChangeElement -->
  <testcase classname="example.BlogManagementPageTest" name="shouldDisplayBlogManagementAfterClickLimitChangeElement" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayBlogManagementAfterClickLimitChangeElement -->
  <testcase classname="example.BlogManagementPageTest" name="shouldDisplayBlogManagementAfterClickLimitChangeElement" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayBlogManagementAfterClickLimitChangeElement -->
  <testcase classname="example.BlogManagementPageTest" name="shouldDisplayBlogManagementAfterClickRefreshBtn" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayBlogManagementAfterClickRefreshBtn -->
  <testcase classname="example.BlogManagementPageTest" name="shouldDisplayBlogManagementAfterClickRefreshBtn" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayBlogManagementAfterClickRefreshBtn -->
  <testcase classname="example.BlogManagementPageTest" name="shouldDisplayBlogManagementAfterClickRefreshBtn" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayBlogManagementAfterClickRefreshBtn -->
  <testcase classname="example.BlogManagementPageTest" name="shouldDisplayBlogManagementAfterClickRefreshBtn" time="0.001">
    <skipped/>
  </testcase> <!-- shouldDisplayBlogManagementAfterClickRefreshBtn -->
  <testcase classname="example.BlogManagementPageTest" name="shouldDisplayBlogManagementAfterClickTheFirstPageBtn" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayBlogManagementAfterClickTheFirstPageBtn -->
  <testcase classname="example.BlogManagementPageTest" name="shouldDisplayBlogManagementAfterClickTheFirstPageBtn" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayBlogManagementAfterClickTheFirstPageBtn -->
  <testcase classname="example.BlogManagementPageTest" name="shouldDisplayBlogManagementAfterClickTheFirstPageBtn" time="0.001">
    <skipped/>
  </testcase> <!-- shouldDisplayBlogManagementAfterClickTheFirstPageBtn -->
  <testcase classname="example.BlogManagementPageTest" name="shouldDisplayBlogManagementAfterClickTheFirstPageBtn" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayBlogManagementAfterClickTheFirstPageBtn -->
  <testcase classname="example.BlogManagementPageTest" name="shouldDisplayBlogManagementAfterClickTheLastpageBtn" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayBlogManagementAfterClickTheLastpageBtn -->
  <testcase classname="example.BlogManagementPageTest" name="shouldDisplayBlogManagementAfterClickTheLastpageBtn" time="0.001">
    <skipped/>
  </testcase> <!-- shouldDisplayBlogManagementAfterClickTheLastpageBtn -->
  <testcase classname="example.BlogManagementPageTest" name="shouldDisplayBlogManagementAfterClickTheLastpageBtn" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayBlogManagementAfterClickTheLastpageBtn -->
  <testcase classname="example.BlogManagementPageTest" name="shouldDisplayBlogManagementAfterClickTheLastpageBtn" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayBlogManagementAfterClickTheLastpageBtn -->
  <testcase classname="example.BlogManagementPageTest" name="shouldDisplayBlogManagementAfterEndDateFilterChange" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayBlogManagementAfterEndDateFilterChange -->
  <testcase classname="example.BlogManagementPageTest" name="shouldDisplayBlogManagementAfterInitialFetch" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayBlogManagementAfterInitialFetch -->
  <testcase classname="example.BlogManagementPageTest" name="shouldDisplayBlogManagementAfterInitialFetch" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayBlogManagementAfterInitialFetch -->
  <testcase classname="example.BlogManagementPageTest" name="shouldDisplayBlogManagementAfterInitialFetch" time="0.001">
    <skipped/>
  </testcase> <!-- shouldDisplayBlogManagementAfterInitialFetch -->
  <testcase classname="example.BlogManagementPageTest" name="shouldDisplayBlogManagementAfterInitialFetch" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayBlogManagementAfterInitialFetch -->
  <testcase classname="example.BlogManagementPageTest" name="shouldDisplayBlogManagementAfterKeywordFilterChange" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayBlogManagementAfterKeywordFilterChange -->
  <testcase classname="example.BlogManagementPageTest" name="shouldDisplayBlogManagementAfterStartDateFilterChange" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayBlogManagementAfterStartDateFilterChange -->
  <testcase classname="example.BlogManagementPageTest" name="shouldDisplayBlogManagementAfterTagFilterChange" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayBlogManagementAfterTagFilterChange -->
  <testcase classname="example.BlogManagementPageTest" name="shouldDisplayBlogManagementPageHeading" time="0.001">
    <skipped/>
  </testcase> <!-- shouldDisplayBlogManagementPageHeading -->
  <testcase classname="example.BlogManagementPageTest" name="shouldDisplayBlogManagementPageHeading" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayBlogManagementPageHeading -->
  <testcase classname="example.BlogManagementPageTest" name="shouldDisplayBlogManagementPageHeading" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayBlogManagementPageHeading -->
  <testcase classname="example.BlogManagementPageTest" name="shouldDisplayBlogManagementPageHeading" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayBlogManagementPageHeading -->
  <testcase classname="example.BlogManagementPageTest" name="shouldDisplayBlogManagementSortedByClapAsc" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayBlogManagementSortedByClapAsc -->
  <testcase classname="example.BlogManagementPageTest" name="shouldDisplayBlogManagementSortedByClapDesc" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayBlogManagementSortedByClapDesc -->
  <testcase classname="example.BlogManagementPageTest" name="shouldDisplayBlogManagementSortedByDateAsc" time="0.001">
    <skipped/>
  </testcase> <!-- shouldDisplayBlogManagementSortedByDateAsc -->
  <testcase classname="example.BlogManagementPageTest" name="shouldDisplayBlogManagementSortedByDateDesc" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayBlogManagementSortedByDateDesc -->
  <testcase classname="example.BlogManagementPageTest" name="shouldDisplayBlogManagementSortedByTitleAsc" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayBlogManagementSortedByTitleAsc -->
  <testcase classname="example.BlogManagementPageTest" name="shouldDisplayBlogManagementSortedByTitleDesc" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayBlogManagementSortedByTitleDesc -->
  <testcase classname="example.BlogManagementPageTest" name="shouldDisplayInitialFetchSuccessMessageSuccess" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayInitialFetchSuccessMessageSuccess -->
  <testcase classname="example.BlogManagementPageTest" name="shouldDisplayInitialFetchSuccessMessageSuccess" time="0.001">
    <skipped/>
  </testcase> <!-- shouldDisplayInitialFetchSuccessMessageSuccess -->
  <testcase classname="example.BlogManagementPageTest" name="shouldDisplayInitialFetchSuccessMessageSuccess" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayInitialFetchSuccessMessageSuccess -->
  <testcase classname="example.BlogManagementPageTest" name="shouldDisplayInitialFetchSuccessMessageSuccess" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayInitialFetchSuccessMessageSuccess -->
  <testcase classname="example.BlogManagementPageTest" name="shouldDisplaySortAndFilterOverlaySettingWhenClickSettingBtn" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplaySortAndFilterOverlaySettingWhenClickSettingBtn -->
  <testcase classname="example.BlogManagementPageTest" name="shouldDisplaySortAndFilterOverlaySettingWhenClickSettingBtn" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplaySortAndFilterOverlaySettingWhenClickSettingBtn -->
  <testcase classname="example.BlogManagementPageTest" name="shouldRouteUserToUpdateBlogPageWhenClickEditBlogLinkOfSpecificBlogItem" time="0.0">
    <skipped/>
  </testcase> <!-- shouldRouteUserToUpdateBlogPageWhenClickEditBlogLinkOfSpecificBlogItem -->
  <testcase classname="example.BlogManagementPageTest" name="shouldRouteUserToUpdateBlogPageWhenClickEditBlogLinkOfSpecificBlogItem" time="0.0">
    <skipped/>
  </testcase> <!-- shouldRouteUserToUpdateBlogPageWhenClickEditBlogLinkOfSpecificBlogItem -->
  <testcase classname="example.BlogManagementPageTest" name="shouldRouteUserToUpdateBlogPageWhenClickEditBlogLinkOfSpecificBlogItem" time="0.0">
    <skipped/>
  </testcase> <!-- shouldRouteUserToUpdateBlogPageWhenClickEditBlogLinkOfSpecificBlogItem -->
  <testcase classname="example.BlogManagementPageTest" name="shouldRouteUserToUpdateBlogPageWhenClickEditBlogLinkOfSpecificBlogItem" time="0.0">
    <skipped/>
  </testcase> <!-- shouldRouteUserToUpdateBlogPageWhenClickEditBlogLinkOfSpecificBlogItem -->
  <testcase classname="example.BlogManagementPageTest" name="shouldrouteUsertoNewBlogpageWhenClickNewBlogLink" time="0.0">
    <skipped/>
  </testcase> <!-- shouldrouteUsertoNewBlogpageWhenClickNewBlogLink -->
  <testcase classname="example.BlogManagementPageTest" name="shouldrouteUsertoNewBlogpageWhenClickNewBlogLink" time="0.001">
    <skipped/>
  </testcase> <!-- shouldrouteUsertoNewBlogpageWhenClickNewBlogLink -->
  <testcase classname="example.BlogManagementPageTest" name="shouldrouteUsertoNewBlogpageWhenClickNewBlogLink" time="0.0">
    <skipped/>
  </testcase> <!-- shouldrouteUsertoNewBlogpageWhenClickNewBlogLink -->
  <testcase classname="example.BlogManagementPageTest" name="shouldrouteUsertoNewBlogpageWhenClickNewBlogLink" time="0.0">
    <skipped/>
  </testcase> <!-- shouldrouteUsertoNewBlogpageWhenClickNewBlogLink -->
  <testcase classname="example.UpdateBlogPageTest" name="shouldDisplayPublishedBlogAtBlogListPage" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayPublishedBlogAtBlogListPage -->
  <testcase classname="example.UpdateBlogPageTest" name="shouldDisplayUpdateBlogPageHeading" time="0.001">
    <skipped/>
  </testcase> <!-- shouldDisplayUpdateBlogPageHeading -->
  <testcase classname="example.UpdateBlogPageTest" name="shouldDisplayUpdateBlogPageHeading" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayUpdateBlogPageHeading -->
  <testcase classname="example.UpdateBlogPageTest" name="shouldDisplayUpdateBlogPageHeading" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayUpdateBlogPageHeading -->
  <testcase classname="example.UpdateBlogPageTest" name="shouldDisplayUpdateBlogPageHeading" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayUpdateBlogPageHeading -->
  <testcase classname="example.UpdateBlogPageTest" name="shouldNotDisplayNonPublishedBlogAtBlogListPage" time="0.0">
    <skipped/>
  </testcase> <!-- shouldNotDisplayNonPublishedBlogAtBlogListPage -->
  <testcase classname="example.UpdateBlogPageTest" name="shouldPublishUpdateBlog" time="0.0">
    <skipped/>
  </testcase> <!-- shouldPublishUpdateBlog -->
  <testcase classname="example.UpdateBlogPageTest" name="shouldPublishUpdateBlog" time="0.001">
    <skipped/>
  </testcase> <!-- shouldPublishUpdateBlog -->
  <testcase classname="example.UpdateBlogPageTest" name="shouldPublishUpdateBlog" time="0.0">
    <skipped/>
  </testcase> <!-- shouldPublishUpdateBlog -->
  <testcase classname="example.UpdateBlogPageTest" name="shouldPublishUpdateBlog" time="0.0">
    <skipped/>
  </testcase> <!-- shouldPublishUpdateBlog -->
  <testcase classname="example.UpdateBlogPageTest" name="shouldSaveUpdateBlog" time="0.0">
    <skipped/>
  </testcase> <!-- shouldSaveUpdateBlog -->
  <testcase classname="example.UpdateBlogPageTest" name="shouldSaveUpdateBlog" time="0.0">
    <skipped/>
  </testcase> <!-- shouldSaveUpdateBlog -->
  <testcase classname="example.UpdateBlogPageTest" name="shouldSaveUpdateBlog" time="0.0">
    <skipped/>
  </testcase> <!-- shouldSaveUpdateBlog -->
  <testcase classname="example.UpdateBlogPageTest" name="shouldSaveUpdateBlog" time="0.0">
    <skipped/>
  </testcase> <!-- shouldSaveUpdateBlog -->
  <testcase classname="example.BlogListPageTest" name="shouldDisplayBlogListAfterChangeDifferentPage" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayBlogListAfterChangeDifferentPage -->
  <testcase classname="example.BlogListPageTest" name="shouldDisplayBlogListAfterChangeDifferentPage" time="0.001">
    <skipped/>
  </testcase> <!-- shouldDisplayBlogListAfterChangeDifferentPage -->
  <testcase classname="example.BlogListPageTest" name="shouldDisplayBlogListAfterChangeDifferentPage" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayBlogListAfterChangeDifferentPage -->
  <testcase classname="example.BlogListPageTest" name="shouldDisplayBlogListAfterChangeDifferentPage" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayBlogListAfterChangeDifferentPage -->
  <testcase classname="example.BlogListPageTest" name="shouldDisplayBlogListAfterClickLimitChangeElement" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayBlogListAfterClickLimitChangeElement -->
  <testcase classname="example.BlogListPageTest" name="shouldDisplayBlogListAfterClickLimitChangeElement" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayBlogListAfterClickLimitChangeElement -->
  <testcase classname="example.BlogListPageTest" name="shouldDisplayBlogListAfterClickLimitChangeElement" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayBlogListAfterClickLimitChangeElement -->
  <testcase classname="example.BlogListPageTest" name="shouldDisplayBlogListAfterClickLimitChangeElement" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayBlogListAfterClickLimitChangeElement -->
  <testcase classname="example.BlogListPageTest" name="shouldDisplayBlogListAfterClickRefreshBtn" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayBlogListAfterClickRefreshBtn -->
  <testcase classname="example.BlogListPageTest" name="shouldDisplayBlogListAfterClickRefreshBtn" time="0.001">
    <skipped/>
  </testcase> <!-- shouldDisplayBlogListAfterClickRefreshBtn -->
  <testcase classname="example.BlogListPageTest" name="shouldDisplayBlogListAfterClickRefreshBtn" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayBlogListAfterClickRefreshBtn -->
  <testcase classname="example.BlogListPageTest" name="shouldDisplayBlogListAfterClickRefreshBtn" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayBlogListAfterClickRefreshBtn -->
  <testcase classname="example.BlogListPageTest" name="shouldDisplayBlogListAfterClickTheFirstPageBtn" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayBlogListAfterClickTheFirstPageBtn -->
  <testcase classname="example.BlogListPageTest" name="shouldDisplayBlogListAfterClickTheFirstPageBtn" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayBlogListAfterClickTheFirstPageBtn -->
  <testcase classname="example.BlogListPageTest" name="shouldDisplayBlogListAfterClickTheFirstPageBtn" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayBlogListAfterClickTheFirstPageBtn -->
  <testcase classname="example.BlogListPageTest" name="shouldDisplayBlogListAfterClickTheFirstPageBtn" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayBlogListAfterClickTheFirstPageBtn -->
  <testcase classname="example.BlogListPageTest" name="shouldDisplayBlogListAfterClickTheLastpageBtn" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayBlogListAfterClickTheLastpageBtn -->
  <testcase classname="example.BlogListPageTest" name="shouldDisplayBlogListAfterClickTheLastpageBtn" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayBlogListAfterClickTheLastpageBtn -->
  <testcase classname="example.BlogListPageTest" name="shouldDisplayBlogListAfterClickTheLastpageBtn" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayBlogListAfterClickTheLastpageBtn -->
  <testcase classname="example.BlogListPageTest" name="shouldDisplayBlogListAfterClickTheLastpageBtn" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayBlogListAfterClickTheLastpageBtn -->
  <testcase classname="example.BlogListPageTest" name="shouldDisplayBlogListAfterEndDateFilterChange" time="0.001">
    <skipped/>
  </testcase> <!-- shouldDisplayBlogListAfterEndDateFilterChange -->
  <testcase classname="example.BlogListPageTest" name="shouldDisplayBlogListAfterInitialFetch" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayBlogListAfterInitialFetch -->
  <testcase classname="example.BlogListPageTest" name="shouldDisplayBlogListAfterInitialFetch" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayBlogListAfterInitialFetch -->
  <testcase classname="example.BlogListPageTest" name="shouldDisplayBlogListAfterInitialFetch" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayBlogListAfterInitialFetch -->
  <testcase classname="example.BlogListPageTest" name="shouldDisplayBlogListAfterInitialFetch" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayBlogListAfterInitialFetch -->
  <testcase classname="example.BlogListPageTest" name="shouldDisplayBlogListAfterKeywordFilterChange" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayBlogListAfterKeywordFilterChange -->
  <testcase classname="example.BlogListPageTest" name="shouldDisplayBlogListAfterStartDateFilterChange" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayBlogListAfterStartDateFilterChange -->
  <testcase classname="example.BlogListPageTest" name="shouldDisplayBlogListAfterTagFilterChange" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayBlogListAfterTagFilterChange -->
  <testcase classname="example.BlogListPageTest" name="shouldDisplayBlogListPageHeading" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayBlogListPageHeading -->
  <testcase classname="example.BlogListPageTest" name="shouldDisplayBlogListPageHeading" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayBlogListPageHeading -->
  <testcase classname="example.BlogListPageTest" name="shouldDisplayBlogListPageHeading" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayBlogListPageHeading -->
  <testcase classname="example.BlogListPageTest" name="shouldDisplayBlogListPageHeading" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayBlogListPageHeading -->
  <testcase classname="example.BlogListPageTest" name="shouldDisplayBlogListSortedByClapAsc" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayBlogListSortedByClapAsc -->
  <testcase classname="example.BlogListPageTest" name="shouldDisplayBlogListSortedByClapDesc" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayBlogListSortedByClapDesc -->
  <testcase classname="example.BlogListPageTest" name="shouldDisplayBlogListSortedByDateAsc" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayBlogListSortedByDateAsc -->
  <testcase classname="example.BlogListPageTest" name="shouldDisplayBlogListSortedByDateDesc" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayBlogListSortedByDateDesc -->
  <testcase classname="example.BlogListPageTest" name="shouldDisplayBlogListSortedByTitleAsc" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayBlogListSortedByTitleAsc -->
  <testcase classname="example.BlogListPageTest" name="shouldDisplayBlogListSortedByTitleDesc" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayBlogListSortedByTitleDesc -->
  <testcase classname="example.BlogListPageTest" name="shouldDisplayInitialFetchSuccessMessageSuccess" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayInitialFetchSuccessMessageSuccess -->
  <testcase classname="example.BlogListPageTest" name="shouldDisplayInitialFetchSuccessMessageSuccess" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayInitialFetchSuccessMessageSuccess -->
  <testcase classname="example.BlogListPageTest" name="shouldDisplayInitialFetchSuccessMessageSuccess" time="0.001">
    <skipped/>
  </testcase> <!-- shouldDisplayInitialFetchSuccessMessageSuccess -->
  <testcase classname="example.BlogListPageTest" name="shouldDisplayInitialFetchSuccessMessageSuccess" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayInitialFetchSuccessMessageSuccess -->
  <testcase classname="example.BlogListPageTest" name="shouldDisplaySortAndFilterOverlaySettingWhenClickSettingBtn" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplaySortAndFilterOverlaySettingWhenClickSettingBtn -->
  <testcase classname="example.BlogListPageTest" name="shouldDisplaySortAndFilterOverlaySettingWhenClickSettingBtn" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplaySortAndFilterOverlaySettingWhenClickSettingBtn -->
  <testcase classname="example.BlogListPageTest" name="shouldGuideUserToSignupPageAfterClickJoinBtn" time="0.001">
    <skipped/>
  </testcase> <!-- shouldGuideUserToSignupPageAfterClickJoinBtn -->
  <testcase classname="example.BlogListPageTest" name="shouldGuideUserToSignupPageAfterClickJoinBtn" time="0.0">
    <skipped/>
  </testcase> <!-- shouldGuideUserToSignupPageAfterClickJoinBtn -->
  <testcase classname="example.BlogListPageTest" name="shouldGuideUserToSignupPageAfterClickJoinBtnForSmallScreenSize" time="0.0">
    <skipped/>
  </testcase> <!-- shouldGuideUserToSignupPageAfterClickJoinBtnForSmallScreenSize -->
  <testcase classname="example.BlogListPageTest" name="shouldGuideUserToSignupPageAfterClickJoinBtnForSmallScreenSize" time="0.0">
    <skipped/>
  </testcase> <!-- shouldGuideUserToSignupPageAfterClickJoinBtnForSmallScreenSize -->
  <testcase classname="example.BlogPageTest" name="shouldDisplayBlogAtBlogPage" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayBlogAtBlogPage -->
  <testcase classname="example.BlogPageTest" name="shouldDisplayBlogAtBlogPage" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayBlogAtBlogPage -->
  <testcase classname="example.BlogPageTest" name="shouldDisplayBlogAtBlogPage" time="0.001">
    <skipped/>
  </testcase> <!-- shouldDisplayBlogAtBlogPage -->
  <testcase classname="example.BlogPageTest" name="shouldDisplayBlogAtBlogPage" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayBlogAtBlogPage -->
  <testcase classname="example.HomePageTest" name="shouldDisplay5Blog_itemAtInitialLoad" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplay5Blog_itemAtInitialLoad -->
  <testcase classname="example.HomePageTest" name="shouldDisplay5Blog_itemAtInitialLoad" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplay5Blog_itemAtInitialLoad -->
  <testcase classname="example.HomePageTest" name="shouldDisplay5Blog_itemAtInitialLoad" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplay5Blog_itemAtInitialLoad -->
  <testcase classname="example.HomePageTest" name="shouldDisplay5Blog_itemAtInitialLoad" time="0.002">
    <skipped/>
  </testcase> <!-- shouldDisplay5Blog_itemAtInitialLoad -->
  <testcase classname="example.HomePageTest" name="shouldFetchPopularBlogWhenClickPopularBtn" time="0.0">
    <skipped/>
  </testcase> <!-- shouldFetchPopularBlogWhenClickPopularBtn -->
  <testcase classname="example.HomePageTest" name="shouldFetchPopularBlogWhenClickPopularBtn" time="0.0">
    <skipped/>
  </testcase> <!-- shouldFetchPopularBlogWhenClickPopularBtn -->
  <testcase classname="example.HomePageTest" name="shouldFetchPopularBlogWhenClickPopularBtn" time="0.0">
    <skipped/>
  </testcase> <!-- shouldFetchPopularBlogWhenClickPopularBtn -->
  <testcase classname="example.HomePageTest" name="shouldFetchPopularBlogWhenClickPopularBtn" time="0.0">
    <skipped/>
  </testcase> <!-- shouldFetchPopularBlogWhenClickPopularBtn -->
  <testcase classname="example.HomePageTest" name="shouldRouteSearchResultPageWhenSearchInHome" time="0.0">
    <skipped/>
  </testcase> <!-- shouldRouteSearchResultPageWhenSearchInHome -->
  <testcase classname="example.HomePageTest" name="shouldRouteSearchResultPageWhenSearchInHome" time="0.0">
    <skipped/>
  </testcase> <!-- shouldRouteSearchResultPageWhenSearchInHome -->
  <testcase classname="example.HomePageTest" name="shouldRouteSearchResultPageWhenSearchInHome" time="0.0">
    <skipped/>
  </testcase> <!-- shouldRouteSearchResultPageWhenSearchInHome -->
  <testcase classname="example.HomePageTest" name="shouldRouteSearchResultPageWhenSearchInHome" time="0.0">
    <skipped/>
  </testcase> <!-- shouldRouteSearchResultPageWhenSearchInHome -->
  <testcase classname="example.HomePageTest" name="shouldRouteSignupPageWhenJoinBtnIsClicked" time="0.0">
    <skipped/>
  </testcase> <!-- shouldRouteSignupPageWhenJoinBtnIsClicked -->
  <testcase classname="example.HomePageTest" name="shouldRouteSignupPageWhenJoinBtnIsClicked" time="0.0">
    <skipped/>
  </testcase> <!-- shouldRouteSignupPageWhenJoinBtnIsClicked -->
  <testcase classname="example.HomePageTest" name="shouldRouteSignupPageWhenJoinBtnIsClicked" time="0.0">
    <skipped/>
  </testcase> <!-- shouldRouteSignupPageWhenJoinBtnIsClicked -->
  <testcase classname="example.HomePageTest" name="shouldRouteSignupPageWhenJoinBtnIsClicked" time="0.0">
    <skipped/>
  </testcase> <!-- shouldRouteSignupPageWhenJoinBtnIsClicked -->
  <testcase classname="example.LoginPageTest" name="shouldDisplayConfirmInputEmptyValidationErrorWhenItIsFocused" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayConfirmInputEmptyValidationErrorWhenItIsFocused -->
  <testcase classname="example.LoginPageTest" name="shouldDisplayConfirmInputEmptyValidationErrorWhenItIsFocused" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayConfirmInputEmptyValidationErrorWhenItIsFocused -->
  <testcase classname="example.LoginPageTest" name="shouldDisplayConfirmInputEmptyValidationErrorWhenItIsFocused" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayConfirmInputEmptyValidationErrorWhenItIsFocused -->
  <testcase classname="example.LoginPageTest" name="shouldDisplayConfirmInputEmptyValidationErrorWhenItIsFocused" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayConfirmInputEmptyValidationErrorWhenItIsFocused -->
  <testcase classname="example.LoginPageTest" name="shouldDisplayEmailInputEmptyValidationErrorWhenItIsFocused" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayEmailInputEmptyValidationErrorWhenItIsFocused -->
  <testcase classname="example.LoginPageTest" name="shouldDisplayEmailInputEmptyValidationErrorWhenItIsFocused" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayEmailInputEmptyValidationErrorWhenItIsFocused -->
  <testcase classname="example.LoginPageTest" name="shouldDisplayEmailInputEmptyValidationErrorWhenItIsFocused" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayEmailInputEmptyValidationErrorWhenItIsFocused -->
  <testcase classname="example.LoginPageTest" name="shouldDisplayEmailInputEmptyValidationErrorWhenItIsFocused" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayEmailInputEmptyValidationErrorWhenItIsFocused -->
  <testcase classname="example.LoginPageTest" name="shouldDisplayFetchErrorMessageWhenProvidedEmailDoesNotRegistered" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayFetchErrorMessageWhenProvidedEmailDoesNotRegistered -->
  <testcase classname="example.LoginPageTest" name="shouldDisplayFetchErrorMessageWhenProvidedEmailDoesNotRegistered" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayFetchErrorMessageWhenProvidedEmailDoesNotRegistered -->
  <testcase classname="example.LoginPageTest" name="shouldDisplayFetchErrorMessageWhenProvidedEmailDoesNotRegistered" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayFetchErrorMessageWhenProvidedEmailDoesNotRegistered -->
  <testcase classname="example.LoginPageTest" name="shouldDisplayFetchErrorMessageWhenProvidedEmailDoesNotRegistered" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayFetchErrorMessageWhenProvidedEmailDoesNotRegistered -->
  <testcase classname="example.LoginPageTest" name="shouldDisplayFetchErrorMessageWhenProvidedPasswordIsInvalid" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayFetchErrorMessageWhenProvidedPasswordIsInvalid -->
  <testcase classname="example.LoginPageTest" name="shouldDisplayFetchErrorMessageWhenProvidedPasswordIsInvalid" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayFetchErrorMessageWhenProvidedPasswordIsInvalid -->
  <testcase classname="example.LoginPageTest" name="shouldDisplayFetchErrorMessageWhenProvidedPasswordIsInvalid" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayFetchErrorMessageWhenProvidedPasswordIsInvalid -->
  <testcase classname="example.LoginPageTest" name="shouldDisplayFetchErrorMessageWhenProvidedPasswordIsInvalid" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayFetchErrorMessageWhenProvidedPasswordIsInvalid -->
  <testcase classname="example.LoginPageTest" name="shouldDisplayPasswordInputEmptyValidationErrorWhenItIsFocused" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayPasswordInputEmptyValidationErrorWhenItIsFocused -->
  <testcase classname="example.LoginPageTest" name="shouldDisplayPasswordInputEmptyValidationErrorWhenItIsFocused" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayPasswordInputEmptyValidationErrorWhenItIsFocused -->
  <testcase classname="example.LoginPageTest" name="shouldDisplayPasswordInputEmptyValidationErrorWhenItIsFocused" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayPasswordInputEmptyValidationErrorWhenItIsFocused -->
  <testcase classname="example.LoginPageTest" name="shouldDisplayPasswordInputEmptyValidationErrorWhenItIsFocused" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayPasswordInputEmptyValidationErrorWhenItIsFocused -->
  <testcase classname="example.LoginPageTest" name="shouldNotAllowToSubmitWhenAtLeastOneError" time="0.0">
    <skipped/>
  </testcase> <!-- shouldNotAllowToSubmitWhenAtLeastOneError -->
  <testcase classname="example.LoginPageTest" name="shouldNotAllowToSubmitWhenAtLeastOneError" time="0.0">
    <skipped/>
  </testcase> <!-- shouldNotAllowToSubmitWhenAtLeastOneError -->
  <testcase classname="example.LoginPageTest" name="shouldNotAllowToSubmitWhenAtLeastOneError" time="0.0">
    <skipped/>
  </testcase> <!-- shouldNotAllowToSubmitWhenAtLeastOneError -->
  <testcase classname="example.LoginPageTest" name="shouldNotAllowToSubmitWhenAtLeastOneError" time="0.0">
    <skipped/>
  </testcase> <!-- shouldNotAllowToSubmitWhenAtLeastOneError -->
  <testcase classname="example.LoginPageTest" name="shouldRouteHomePageWhenSuccessfullyLogin" time="0.0">
    <skipped/>
  </testcase> <!-- shouldRouteHomePageWhenSuccessfullyLogin -->
  <testcase classname="example.LoginPageTest" name="shouldRouteHomePageWhenSuccessfullyLogin" time="0.0">
    <skipped/>
  </testcase> <!-- shouldRouteHomePageWhenSuccessfullyLogin -->
  <testcase classname="example.LoginPageTest" name="shouldRouteHomePageWhenSuccessfullyLogin" time="0.0">
    <skipped/>
  </testcase> <!-- shouldRouteHomePageWhenSuccessfullyLogin -->
  <testcase classname="example.LoginPageTest" name="shouldRouteHomePageWhenSuccessfullyLogin" time="0.0">
    <skipped/>
  </testcase> <!-- shouldRouteHomePageWhenSuccessfullyLogin -->
  <testcase classname="example.LoginPageTest" name="shouldRouteSignupPageWhenClickTheLink" time="0.0">
    <skipped/>
  </testcase> <!-- shouldRouteSignupPageWhenClickTheLink -->
  <testcase classname="example.LoginPageTest" name="shouldRouteSignupPageWhenClickTheLink" time="0.0">
    <skipped/>
  </testcase> <!-- shouldRouteSignupPageWhenClickTheLink -->
  <testcase classname="example.LoginPageTest" name="shouldRouteSignupPageWhenClickTheLink" time="0.0">
    <skipped/>
  </testcase> <!-- shouldRouteSignupPageWhenClickTheLink -->
  <testcase classname="example.LoginPageTest" name="shouldRouteSignupPageWhenClickTheLink" time="0.0">
    <skipped/>
  </testcase> <!-- shouldRouteSignupPageWhenClickTheLink -->
  <testcase classname="example.HeaderComponentTest" name="shouldDisplayBlogsNavMenuItemInHeader" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayBlogsNavMenuItemInHeader -->
  <testcase classname="example.HeaderComponentTest" name="shouldDisplayLoginNavMenuItemInHeader" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayLoginNavMenuItemInHeader -->
  <testcase classname="example.HeaderComponentTest" name="shouldDisplayNavMenuToggleIconInHeader" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayNavMenuToggleIconInHeader -->
  <testcase classname="example.HeaderComponentTest" name="shouldDisplayNavMenuToggleIconInHeader" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayNavMenuToggleIconInHeader -->
  <testcase classname="example.HeaderComponentTest" name="shouldDisplayNavMenuToggleIconInHeader" time="0.002">
    <skipped/>
  </testcase> <!-- shouldDisplayNavMenuToggleIconInHeader -->
  <testcase classname="example.HeaderComponentTest" name="shouldDisplaySignupNavMenuItemInHeader" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplaySignupNavMenuItemInHeader -->
  <testcase classname="example.HeaderComponentTest" name="shouldDisplayTitleInHeader" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayTitleInHeader -->
  <testcase classname="example.HeaderComponentTest" name="shouldDisplayTitleInHeader" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayTitleInHeader -->
  <testcase classname="example.HeaderComponentTest" name="shouldDisplayTitleInHeader" time="0.001">
    <skipped/>
  </testcase> <!-- shouldDisplayTitleInHeader -->
  <testcase classname="example.HeaderComponentTest" name="shouldDisplayTitleInHeader" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayTitleInHeader -->
  <testcase classname="example.HeaderComponentTest" name="shouldRouteToBlogListPageWhenClickBlogListLinkAfterOpenMenuBar" time="0.0">
    <skipped/>
  </testcase> <!-- shouldRouteToBlogListPageWhenClickBlogListLinkAfterOpenMenuBar -->
  <testcase classname="example.HeaderComponentTest" name="shouldRouteToBlogListPageWhenClickBlogListLinkAfterOpenMenuBar" time="0.0">
    <skipped/>
  </testcase> <!-- shouldRouteToBlogListPageWhenClickBlogListLinkAfterOpenMenuBar -->
  <testcase classname="example.HeaderComponentTest" name="shouldRouteToBlogListPageWhenClickBlogListLinkAfterOpenMenuBar" time="0.0">
    <skipped/>
  </testcase> <!-- shouldRouteToBlogListPageWhenClickBlogListLinkAfterOpenMenuBar -->
  <testcase classname="example.HeaderComponentTest" name="shouldRouteToBlogListPageWhenClickBlogsLinkInHeader" time="0.0">
    <skipped/>
  </testcase> <!-- shouldRouteToBlogListPageWhenClickBlogsLinkInHeader -->
  <testcase classname="example.HeaderComponentTest" name="shouldRouteToLoginPageWhenClickLoginLinkAfterOpenMenuBar" time="0.0">
    <skipped/>
  </testcase> <!-- shouldRouteToLoginPageWhenClickLoginLinkAfterOpenMenuBar -->
  <testcase classname="example.HeaderComponentTest" name="shouldRouteToLoginPageWhenClickLoginLinkAfterOpenMenuBar" time="0.0">
    <skipped/>
  </testcase> <!-- shouldRouteToLoginPageWhenClickLoginLinkAfterOpenMenuBar -->
  <testcase classname="example.HeaderComponentTest" name="shouldRouteToLoginPageWhenClickLoginLinkAfterOpenMenuBar" time="0.001">
    <skipped/>
  </testcase> <!-- shouldRouteToLoginPageWhenClickLoginLinkAfterOpenMenuBar -->
  <testcase classname="example.HeaderComponentTest" name="shouldRouteToLoginPageWhenClickLoginLinkInHeader" time="0.0">
    <skipped/>
  </testcase> <!-- shouldRouteToLoginPageWhenClickLoginLinkInHeader -->
  <testcase classname="example.HeaderComponentTest" name="shouldRouteToSignupPageWhenClickSignupLinkAfterOpenMenuBar" time="0.0">
    <skipped/>
  </testcase> <!-- shouldRouteToSignupPageWhenClickSignupLinkAfterOpenMenuBar -->
  <testcase classname="example.HeaderComponentTest" name="shouldRouteToSignupPageWhenClickSignupLinkAfterOpenMenuBar" time="0.0">
    <skipped/>
  </testcase> <!-- shouldRouteToSignupPageWhenClickSignupLinkAfterOpenMenuBar -->
  <testcase classname="example.HeaderComponentTest" name="shouldRouteToSignupPageWhenClickSignupLinkAfterOpenMenuBar" time="0.0">
    <skipped/>
  </testcase> <!-- shouldRouteToSignupPageWhenClickSignupLinkAfterOpenMenuBar -->
  <testcase classname="example.HeaderComponentTest" name="shouldRouteToSignupPageWhenClickSignupLinkInHeader" time="0.001">
    <skipped/>
  </testcase> <!-- shouldRouteToSignupPageWhenClickSignupLinkInHeader -->
  <testcase classname="example.NewBlogPageTest" name="shouldDisplayNewBlogPageHeading" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayNewBlogPageHeading -->
  <testcase classname="example.NewBlogPageTest" name="shouldDisplayNewBlogPageHeading" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayNewBlogPageHeading -->
  <testcase classname="example.NewBlogPageTest" name="shouldDisplayNewBlogPageHeading" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayNewBlogPageHeading -->
  <testcase classname="example.NewBlogPageTest" name="shouldDisplayNewBlogPageHeading" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayNewBlogPageHeading -->
  <testcase classname="example.NewBlogPageTest" name="shouldDisplayPublishedBlogAtBlogListPage" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayPublishedBlogAtBlogListPage -->
  <testcase classname="example.NewBlogPageTest" name="shouldNotDisplayNonPublishedBlogAtBlogListPage" time="0.0">
    <skipped/>
  </testcase> <!-- shouldNotDisplayNonPublishedBlogAtBlogListPage -->
  <testcase classname="example.NewBlogPageTest" name="shouldPublishNewBlog" time="0.0">
    <skipped/>
  </testcase> <!-- shouldPublishNewBlog -->
  <testcase classname="example.NewBlogPageTest" name="shouldPublishNewBlog" time="0.0">
    <skipped/>
  </testcase> <!-- shouldPublishNewBlog -->
  <testcase classname="example.NewBlogPageTest" name="shouldPublishNewBlog" time="0.0">
    <skipped/>
  </testcase> <!-- shouldPublishNewBlog -->
  <testcase classname="example.NewBlogPageTest" name="shouldPublishNewBlog" time="0.001">
    <skipped/>
  </testcase> <!-- shouldPublishNewBlog -->
  <testcase classname="example.NewBlogPageTest" name="shouldSaveNewBlog" time="0.0">
    <skipped/>
  </testcase> <!-- shouldSaveNewBlog -->
  <testcase classname="example.NewBlogPageTest" name="shouldSaveNewBlog" time="0.0">
    <skipped/>
  </testcase> <!-- shouldSaveNewBlog -->
  <testcase classname="example.NewBlogPageTest" name="shouldSaveNewBlog" time="0.0">
    <skipped/>
  </testcase> <!-- shouldSaveNewBlog -->
  <testcase classname="example.NewBlogPageTest" name="shouldSaveNewBlog" time="0.0">
    <skipped/>
  </testcase> <!-- shouldSaveNewBlog -->
  <testcase classname="example.ProfilePageTest" name="shouldCreateAvatarImage" time="0.0">
    <skipped/>
  </testcase> <!-- shouldCreateAvatarImage -->
  <testcase classname="example.ProfilePageTest" name="shouldCreateAvatarImage" time="0.0">
    <skipped/>
  </testcase> <!-- shouldCreateAvatarImage -->
  <testcase classname="example.ProfilePageTest" name="shouldCreateAvatarImage" time="0.0">
    <skipped/>
  </testcase> <!-- shouldCreateAvatarImage -->
  <testcase classname="example.ProfilePageTest" name="shouldCreateAvatarImage" time="0.0">
    <skipped/>
  </testcase> <!-- shouldCreateAvatarImage -->
  <testcase classname="example.ProfilePageTest" name="shouldDeleteExistingAvatarImage" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDeleteExistingAvatarImage -->
  <testcase classname="example.ProfilePageTest" name="shouldDeleteExistingAvatarImage" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDeleteExistingAvatarImage -->
  <testcase classname="example.ProfilePageTest" name="shouldDeleteExistingAvatarImage" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDeleteExistingAvatarImage -->
  <testcase classname="example.ProfilePageTest" name="shouldDeleteExistingAvatarImage" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDeleteExistingAvatarImage -->
  <testcase classname="example.ProfilePageTest" name="shouldDisplayAllUPdateUserInfoAfterAllUserInfochnageRequestWithAvatarImage" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayAllUPdateUserInfoAfterAllUserInfochnageRequestWithAvatarImage -->
  <testcase classname="example.ProfilePageTest" name="shouldDisplayAllUPdateUserInfoAfterAllUserInfochnageRequestWithAvatarImage" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayAllUPdateUserInfoAfterAllUserInfochnageRequestWithAvatarImage -->
  <testcase classname="example.ProfilePageTest" name="shouldDisplayAllUPdateUserInfoAfterAllUserInfochnageRequestWithAvatarImage" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayAllUPdateUserInfoAfterAllUserInfochnageRequestWithAvatarImage -->
  <testcase classname="example.ProfilePageTest" name="shouldDisplayAllUPdateUserInfoAfterAllUserInfochnageRequestWithAvatarImage" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayAllUPdateUserInfoAfterAllUserInfochnageRequestWithAvatarImage -->
  <testcase classname="example.ProfilePageTest" name="shouldDisplayAllUpdatedUserInfoAfterAllUserinfoChangeRequest" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayAllUpdatedUserInfoAfterAllUserinfoChangeRequest -->
  <testcase classname="example.ProfilePageTest" name="shouldDisplayAllUpdatedUserInfoAfterAllUserinfoChangeRequest" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayAllUpdatedUserInfoAfterAllUserinfoChangeRequest -->
  <testcase classname="example.ProfilePageTest" name="shouldDisplayAllUpdatedUserInfoAfterAllUserinfoChangeRequest" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayAllUpdatedUserInfoAfterAllUserinfoChangeRequest -->
  <testcase classname="example.ProfilePageTest" name="shouldDisplayAllUpdatedUserInfoAfterAllUserinfoChangeRequest" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayAllUpdatedUserInfoAfterAllUserinfoChangeRequest -->
  <testcase classname="example.ProfilePageTest" name="shouldDisplayProfilePageHeading" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayProfilePageHeading -->
  <testcase classname="example.ProfilePageTest" name="shouldDisplayProfilePageHeading" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayProfilePageHeading -->
  <testcase classname="example.ProfilePageTest" name="shouldDisplayProfilePageHeading" time="0.001">
    <skipped/>
  </testcase> <!-- shouldDisplayProfilePageHeading -->
  <testcase classname="example.ProfilePageTest" name="shouldDisplayProfilePageHeading" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayProfilePageHeading -->
  <testcase classname="example.ProfilePageTest" name="shouldDisplayUpdatedEmailAfterOnlyEmailChangeRequest" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayUpdatedEmailAfterOnlyEmailChangeRequest -->
  <testcase classname="example.ProfilePageTest" name="shouldDisplayUpdatedEmailAfterOnlyEmailChangeRequest" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayUpdatedEmailAfterOnlyEmailChangeRequest -->
  <testcase classname="example.ProfilePageTest" name="shouldDisplayUpdatedEmailAfterOnlyEmailChangeRequest" time="0.001">
    <skipped/>
  </testcase> <!-- shouldDisplayUpdatedEmailAfterOnlyEmailChangeRequest -->
  <testcase classname="example.ProfilePageTest" name="shouldDisplayUpdatedEmailAfterOnlyEmailChangeRequest" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayUpdatedEmailAfterOnlyEmailChangeRequest -->
  <testcase classname="example.ProfilePageTest" name="shouldDisplayUpdatedNameAfterOnlyNameChangeRequest" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayUpdatedNameAfterOnlyNameChangeRequest -->
  <testcase classname="example.ProfilePageTest" name="shouldDisplayUpdatedNameAfterOnlyNameChangeRequest" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayUpdatedNameAfterOnlyNameChangeRequest -->
  <testcase classname="example.ProfilePageTest" name="shouldDisplayUpdatedNameAfterOnlyNameChangeRequest" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayUpdatedNameAfterOnlyNameChangeRequest -->
  <testcase classname="example.ProfilePageTest" name="shouldDisplayUpdatedNameAfterOnlyNameChangeRequest" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayUpdatedNameAfterOnlyNameChangeRequest -->
  <testcase classname="example.ProfilePageTest" name="shouldDisplayUpdatedPasswordAfterOnlyPasswordChangeRequest" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayUpdatedPasswordAfterOnlyPasswordChangeRequest -->
  <testcase classname="example.ProfilePageTest" name="shouldDisplayUpdatedPasswordAfterOnlyPasswordChangeRequest" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayUpdatedPasswordAfterOnlyPasswordChangeRequest -->
  <testcase classname="example.ProfilePageTest" name="shouldDisplayUpdatedPasswordAfterOnlyPasswordChangeRequest" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayUpdatedPasswordAfterOnlyPasswordChangeRequest -->
  <testcase classname="example.ProfilePageTest" name="shouldDisplayUpdatedPasswordAfterOnlyPasswordChangeRequest" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayUpdatedPasswordAfterOnlyPasswordChangeRequest -->
  <testcase classname="example.ProfilePageTest" name="shouldRouteUserBlogManagementPageWhenClickTheLink" time="0.004">
    <skipped/>
  </testcase> <!-- shouldRouteUserBlogManagementPageWhenClickTheLink -->
  <testcase classname="example.ProfilePageTest" name="shouldRouteUserBlogManagementPageWhenClickTheLink" time="0.001">
    <skipped/>
  </testcase> <!-- shouldRouteUserBlogManagementPageWhenClickTheLink -->
  <testcase classname="example.ProfilePageTest" name="shouldRouteUserBlogManagementPageWhenClickTheLink" time="0.0">
    <skipped/>
  </testcase> <!-- shouldRouteUserBlogManagementPageWhenClickTheLink -->
  <testcase classname="example.ProfilePageTest" name="shouldRouteUserBlogManagementPageWhenClickTheLink" time="0.0">
    <skipped/>
  </testcase> <!-- shouldRouteUserBlogManagementPageWhenClickTheLink -->
  <testcase classname="example.ProfilePageTest" name="shouldUnchangeExistingAvatarImage" time="0.0">
    <skipped/>
  </testcase> <!-- shouldUnchangeExistingAvatarImage -->
  <testcase classname="example.ProfilePageTest" name="shouldUnchangeExistingAvatarImage" time="0.0">
    <skipped/>
  </testcase> <!-- shouldUnchangeExistingAvatarImage -->
  <testcase classname="example.ProfilePageTest" name="shouldUnchangeExistingAvatarImage" time="0.001">
    <skipped/>
  </testcase> <!-- shouldUnchangeExistingAvatarImage -->
  <testcase classname="example.ProfilePageTest" name="shouldUnchangeExistingAvatarImage" time="0.0">
    <skipped/>
  </testcase> <!-- shouldUnchangeExistingAvatarImage -->
  <testcase classname="example.ProfilePageTest" name="shouldUpdateExistingAvatarImageWithNewOne" time="0.0">
    <skipped/>
  </testcase> <!-- shouldUpdateExistingAvatarImageWithNewOne -->
  <testcase classname="example.ProfilePageTest" name="shouldUpdateExistingAvatarImageWithNewOne" time="0.0">
    <skipped/>
  </testcase> <!-- shouldUpdateExistingAvatarImageWithNewOne -->
  <testcase classname="example.ProfilePageTest" name="shouldUpdateExistingAvatarImageWithNewOne" time="0.0">
    <skipped/>
  </testcase> <!-- shouldUpdateExistingAvatarImageWithNewOne -->
  <testcase classname="example.ProfilePageTest" name="shouldUpdateExistingAvatarImageWithNewOne" time="0.0">
    <skipped/>
  </testcase> <!-- shouldUpdateExistingAvatarImageWithNewOne -->
  <testcase classname="example.SignupPageTest" name="shouldDisplayConfirmInputEmptyValidationErrorWhenItIsFocused" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayConfirmInputEmptyValidationErrorWhenItIsFocused -->
  <testcase classname="example.SignupPageTest" name="shouldDisplayConfirmInputEmptyValidationErrorWhenItIsFocused" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayConfirmInputEmptyValidationErrorWhenItIsFocused -->
  <testcase classname="example.SignupPageTest" name="shouldDisplayConfirmInputEmptyValidationErrorWhenItIsFocused" time="0.001">
    <skipped/>
  </testcase> <!-- shouldDisplayConfirmInputEmptyValidationErrorWhenItIsFocused -->
  <testcase classname="example.SignupPageTest" name="shouldDisplayConfirmInputEmptyValidationErrorWhenItIsFocused" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayConfirmInputEmptyValidationErrorWhenItIsFocused -->
  <testcase classname="example.SignupPageTest" name="shouldDisplayEmailInputEmptyValidationErrorWhenItIsFocused" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayEmailInputEmptyValidationErrorWhenItIsFocused -->
  <testcase classname="example.SignupPageTest" name="shouldDisplayEmailInputEmptyValidationErrorWhenItIsFocused" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayEmailInputEmptyValidationErrorWhenItIsFocused -->
  <testcase classname="example.SignupPageTest" name="shouldDisplayEmailInputEmptyValidationErrorWhenItIsFocused" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayEmailInputEmptyValidationErrorWhenItIsFocused -->
  <testcase classname="example.SignupPageTest" name="shouldDisplayEmailInputEmptyValidationErrorWhenItIsFocused" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayEmailInputEmptyValidationErrorWhenItIsFocused -->
  <testcase classname="example.SignupPageTest" name="shouldDisplayNameInputEmptyValidationErrorWhenItIsFocused" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayNameInputEmptyValidationErrorWhenItIsFocused -->
  <testcase classname="example.SignupPageTest" name="shouldDisplayNameInputEmptyValidationErrorWhenItIsFocused" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayNameInputEmptyValidationErrorWhenItIsFocused -->
  <testcase classname="example.SignupPageTest" name="shouldDisplayNameInputEmptyValidationErrorWhenItIsFocused" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayNameInputEmptyValidationErrorWhenItIsFocused -->
  <testcase classname="example.SignupPageTest" name="shouldDisplayNameInputEmptyValidationErrorWhenItIsFocused" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayNameInputEmptyValidationErrorWhenItIsFocused -->
  <testcase classname="example.SignupPageTest" name="shouldDisplayPasswordInputEmptyValidationErrorWhenItIsFocused" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayPasswordInputEmptyValidationErrorWhenItIsFocused -->
  <testcase classname="example.SignupPageTest" name="shouldDisplayPasswordInputEmptyValidationErrorWhenItIsFocused" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayPasswordInputEmptyValidationErrorWhenItIsFocused -->
  <testcase classname="example.SignupPageTest" name="shouldDisplayPasswordInputEmptyValidationErrorWhenItIsFocused" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayPasswordInputEmptyValidationErrorWhenItIsFocused -->
  <testcase classname="example.SignupPageTest" name="shouldDisplayPasswordInputEmptyValidationErrorWhenItIsFocused" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayPasswordInputEmptyValidationErrorWhenItIsFocused -->
  <testcase classname="example.SignupPageTest" name="shouldDisplayUserAlreadyExistMessageWhenEmailAlreadyExist" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayUserAlreadyExistMessageWhenEmailAlreadyExist -->
  <testcase classname="example.SignupPageTest" name="shouldDisplayUserAlreadyExistMessageWhenEmailAlreadyExist" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayUserAlreadyExistMessageWhenEmailAlreadyExist -->
  <testcase classname="example.SignupPageTest" name="shouldDisplayUserAlreadyExistMessageWhenEmailAlreadyExist" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayUserAlreadyExistMessageWhenEmailAlreadyExist -->
  <testcase classname="example.SignupPageTest" name="shouldDisplayUserAlreadyExistMessageWhenEmailAlreadyExist" time="0.0">
    <skipped/>
  </testcase> <!-- shouldDisplayUserAlreadyExistMessageWhenEmailAlreadyExist -->
  <testcase classname="example.SignupPageTest" name="shouldNotAllowToSubmitWhenAtLeastOneError" time="0.0">
    <skipped/>
  </testcase> <!-- shouldNotAllowToSubmitWhenAtLeastOneError -->
  <testcase classname="example.SignupPageTest" name="shouldNotAllowToSubmitWhenAtLeastOneError" time="0.0">
    <skipped/>
  </testcase> <!-- shouldNotAllowToSubmitWhenAtLeastOneError -->
  <testcase classname="example.SignupPageTest" name="shouldNotAllowToSubmitWhenAtLeastOneError" time="0.0">
    <skipped/>
  </testcase> <!-- shouldNotAllowToSubmitWhenAtLeastOneError -->
  <testcase classname="example.SignupPageTest" name="shouldNotAllowToSubmitWhenAtLeastOneError" time="0.0">
    <skipped/>
  </testcase> <!-- shouldNotAllowToSubmitWhenAtLeastOneError -->
  <testcase classname="example.SignupPageTest" name="shouldNotDisplayAnyValidationErrorMessageWhenInitialLoad" time="0.0">
    <skipped/>
  </testcase> <!-- shouldNotDisplayAnyValidationErrorMessageWhenInitialLoad -->
  <testcase classname="example.SignupPageTest" name="shouldNotDisplayAnyValidationErrorMessageWhenInitialLoad" time="0.0">
    <skipped/>
  </testcase> <!-- shouldNotDisplayAnyValidationErrorMessageWhenInitialLoad -->
  <testcase classname="example.SignupPageTest" name="shouldNotDisplayAnyValidationErrorMessageWhenInitialLoad" time="0.0">
    <skipped/>
  </testcase> <!-- shouldNotDisplayAnyValidationErrorMessageWhenInitialLoad -->
  <testcase classname="example.SignupPageTest" name="shouldNotDisplayAnyValidationErrorMessageWhenInitialLoad" time="0.0">
    <skipped/>
  </testcase> <!-- shouldNotDisplayAnyValidationErrorMessageWhenInitialLoad -->
  <testcase classname="example.SignupPageTest" name="shouldRouteHomePageWhenSuccessfullySignup" time="0.0">
    <skipped/>
  </testcase> <!-- shouldRouteHomePageWhenSuccessfullySignup -->
  <testcase classname="example.SignupPageTest" name="shouldRouteHomePageWhenSuccessfullySignup" time="0.0">
    <skipped/>
  </testcase> <!-- shouldRouteHomePageWhenSuccessfullySignup -->
  <testcase classname="example.SignupPageTest" name="shouldRouteHomePageWhenSuccessfullySignup" time="0.001">
    <skipped/>
  </testcase> <!-- shouldRouteHomePageWhenSuccessfullySignup -->
  <testcase classname="example.SignupPageTest" name="shouldRouteHomePageWhenSuccessfullySignup" time="0.0">
    <skipped/>
  </testcase> <!-- shouldRouteHomePageWhenSuccessfullySignup -->
  <testcase classname="example.SignupPageTest" name="shouldRouteLoginPageWhenClickTheLink" time="0.0">
    <skipped/>
  </testcase> <!-- shouldRouteLoginPageWhenClickTheLink -->
  <testcase classname="example.SignupPageTest" name="shouldRouteLoginPageWhenClickTheLink" time="0.0">
    <skipped/>
  </testcase> <!-- shouldRouteLoginPageWhenClickTheLink -->
  <testcase classname="example.SignupPageTest" name="shouldRouteLoginPageWhenClickTheLink" time="0.0">
    <skipped/>
  </testcase> <!-- shouldRouteLoginPageWhenClickTheLink -->
  <testcase classname="example.SignupPageTest" name="shouldRouteLoginPageWhenClickTheLink" time="0.0">
    <skipped/>
  </testcase> <!-- shouldRouteLoginPageWhenClickTheLink -->
</testsuite> <!-- Surefire test -->
